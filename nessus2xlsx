#!/usr/bin/python
# Transform Nessus xml to Excel
# Authors: Benjamin Kellermann, Bj√∂rn Kirschner
# License: GPLv3
import sys
import os
import re

if len(sys.argv) < 3:
	sys.exit('Usage: %s <input-xml.nessus> <output.xlsx>' % sys.argv[0])

if not os.path.exists(sys.argv[1]):
	sys.exit('ERROR: Input %s was not found!' % sys.argv[1])

if os.path.exists(sys.argv[2]):
	sys.exit('ERROR: Output %s already exists!' % sys.argv[2])

import xml.etree.ElementTree as ET
from openpyxl import Workbook

xml = ET.parse(sys.argv[1])
root = xml.getroot()

ns = {'cm': 'http://www.nessus.org/cm'}
severity_levels = {
	0: 'None',
	1: 'Low',
	2: 'Medium',
	3: 'High'
}

# Open up a new excel file
wb = Workbook()

ws = wb.create_sheet()
ws.title = "Vulnerabilities"

ws.append(["Section", "Hostname", "Risk", "Compliance Result", "Output", "Name", "Description", "Solution", "See Also", "References", "Plugin ID", "Severity"])

for host in root.iter('ReportHost'):
	hostname = host.get('name')

	for report_item in host.iter('ReportItem'):
		plugin_id = report_item.get('pluginID')
		severity = severity_levels.get(int(report_item.get('severity')))

		description_complete = report_item.find('description').text

#		reg = description.find("Solution")
		reg = re.search(r'(.*)Solution : (.*)See Also : (.*)Reference\(s\) : (.*)', description_complete, re.DOTALL)
#		reg = re.match(r'(.*)secure(.*)net', hostname, re.M)
		if reg:
			description = re.sub(r'(^|$)(\x0a)+', r'', reg.group(1), re.DOTALL)[1:]
			solution = re.sub(r'(^|$)(\x0a)+', r'', reg.group(2), re.DOTALL)
			see_also = re.sub(r'(^|$)(\x0a)+', r'', reg.group(3), re.DOTALL)
#                        print ":".join("{:02x}".format(ord(c)) for c in see_also)

			reference = re.sub(r'(^|$)(\x0a)+', r'', reg.group(4), re.DOTALL)
#			print reg.group(4)
#			print reg.group(2)
		else:
			description = ""
			solution = ""
			see_also = ""
			reference = ""
#			print "nop"
#		print reg.group(3)
#		print reg.group(4)
#		print description
		risk_start = description_complete.find("[RISK=")
		if risk_start != -1:
			risk_end = description_complete.find("]", risk_start)
			risk = description_complete[risk_start+6:risk_end]
		else:
			risk = "" #no risk defined
		if plugin_id == '21156':
			name = report_item.find('cm:compliance-check-name',ns).text
			section = description_complete[1:description_complete.find(' ')]
			actual_value = report_item.find('cm:compliance-actual-value',ns)
			if actual_value is not None:
				output = actual_value.text
			actual_solution = report_item.find('cm:compliance-solution',ns)
			if actual_solution is not None:
				solution = actual_solution.text
			compliance_result = report_item.find('cm:compliance-result',ns)
			if compliance_result is not None:
				result = compliance_result.text
			desc_index = description_complete.find('\n')
			description = description_complete[description_complete.find('\n\n')+2:]
#						description_complete[description_complete.find('\n\n')+2:description_complete.find('Solution')-2]
#                        print ":".join("{:02x}".format(ord(c)) for c in output)

		else:
			name = report_item.find('plugin_name').text
			output = report_item.find('plugin_output')
			section = ""
			result = ""
			if output != None:
				output = output.text
			else:
				output = ""
		ws.append([section, hostname, risk, result, output, name, description, solution, see_also, reference, plugin_id, severity])

# Save the file
wb.save(sys.argv[2])
